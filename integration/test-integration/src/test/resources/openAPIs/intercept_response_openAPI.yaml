# NOTE: changes done to this Swagger Definition may require changes in the API "API Policy Interceptor Response"
# with the OAS: "api_policy_intercept_response_openAPI.yaml" and API YAML file: "api_policy_intercept_response.yaml".
# This is because, same integration test case classes are shared with that API.

swagger: '2.0'
info:
  description: 'This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.'
  version: 1.0.5
  title: Swagger Petstore Response Intercept
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: 'mockBackend:2383'
basePath: /v2
x-wso2-basePath: /intercept-response
tags:
  - name: pet
    description: Everything about your Pets
    externalDocs:
      description: Find out more
      url: 'http://swagger.io'
schemes:
  - http
x-wso2-production-endpoints:
  urls:
    - https://mockBackend:2382/v2
x-wso2-response-interceptor: # API level interceptor definition
  serviceURL: https://mockBackend:2371
  includes:
    - request_headers
    - request_body
    - response_headers
    - response_body
    - invocation_context
paths:
  /echo/{id}:
    get:
      summary: Echo Request
      description: Echo request back to the client
      operationId: echo
      produces:
        - application/json
        - application/xml
      responses:
        '200':
          description: successful operation
    post:
      summary: Echo Request
      description: Echo request back to the client
      operationId: echo
      produces:
        - application/json
        - application/xml
      responses:
        '200':
          description: successful operation
  /echo/both-intercept/resp-body-not-included:
    x-wso2-request-interceptor: # Resource level interceptor definition
      serviceURL: https://mockBackend:2371
      includes:
        - request_headers
    x-wso2-response-interceptor: # Override response interceptor
      serviceURL: https://mockBackend:2371
      includes: # "response_body" is not included here
        - request_headers
        - request_body
    post:
      summary: Echo Request
      description: Echo request back to the client
      operationId: echo
      produces:
        - application/json
        - application/xml
      responses:
        '200':
          description: successful operation
  /pet/findByStatus/req-intercept-enabled:
    x-wso2-request-interceptor: # Resource level interceptor definition
      serviceURL: https://invalid-service-url:2371
      includes:
        - request_headers
    post:
      x-wso2-request-interceptor: # Operational level interceptor definition
        serviceURL: https://mockBackend:2371
        includes:
          - request_headers
      tags:
        - pet
      summary: Finds Pets by status
      description: Multiple status values can be provided with comma separated strings
      operationId: findPetsByStatus
      produces:
        - application/json
        - application/xml
      parameters:
        - name: status
          in: query
          description: Status values that need to be considered for filter
          required: true
          type: array
          items:
            type: string
            enum:
              - available
              - pending
              - sold
            default: available
          collectionFormat: multi
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Pet'
        '400':
          description: Invalid status value
  /pet/findByStatus/interceptor-context:
    x-wso2-request-interceptor:
      serviceURL: https://mockBackend:2371
      includes:
        - request_headers
    x-wso2-response-interceptor:
      serviceURL: https://mockBackend:2371
      includes:
        - request_headers
    post:
      summary: Finds Pets by status
      description: Multiple status values can be provided with comma separated strings
      operationId: findPetsByStatus
      produces:
        - application/json
        - application/xml
      responses:
        '200':
          description: successful operation
  /pet/findByStatus/headers-only:
    x-wso2-response-interceptor:
      serviceURL: https://mockBackend:2371
      includes: # "response_body" not included
        - request_headers # "response_headers" also can be included here
    post:
      summary: Finds Pets by status
      description: Multiple status values can be provided with comma separated strings
      operationId: findPetsByStatus
      produces:
        - application/json
        - application/xml
      responses:
        '200':
          description: successful operation
  /pet/findByStatus/body-included:
    x-wso2-response-interceptor:
      serviceURL: https://mockBackend:2371
      includes:
        - request_headers
        - response_body
    post:
      summary: Finds Pets by status
      description: Multiple status values can be provided with comma separated strings
      operationId: findPetsByStatus
      produces:
        - application/json
        - application/xml
      responses:
        '200':
          description: successful operation
  /pet/findByStatus/update-status-code:
    x-wso2-response-interceptor:
      serviceURL: https://mockBackend:2371
      includes:
        - request_headers
        - response_body
    post:
      summary: Finds Pets by status
      description: Multiple status values can be provided with comma separated strings
      operationId: findPetsByStatus
      produces:
        - application/json
        - application/xml
      responses:
        '200':
          description: successful operation
definitions:
  Pet:
    type: object
    required:
      - name
      - photoUrls
    properties:
      id:
        type: integer
        format: int64
      category:
        $ref: '#/definitions/Category'
      name:
        type: string
        example: doggie
      photoUrls:
        type: array
        xml:
          wrapped: true
        items:
          type: string
          xml:
            name: photoUrl
      tags:
        type: array
        xml:
          wrapped: true
        items:
          xml:
            name: tag
          $ref: '#/definitions/Tag'
      status:
        type: string
        description: pet status in the store
        enum:
          - available
          - pending
          - sold
    xml:
      name: Pet

externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
